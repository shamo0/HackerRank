'''
Author: shamo0

There is a new mobile game that starts with consecutively numbered clouds. 
Some of the clouds are thunderheads and others are cumulus. The player can 
jump on any cumulus cloud having a number that is equal to the number of 
the current cloud plus 1 or 2. The player must avoid the thunderheads. 
Determine the minimum number of jumps it will take to jump from the starting 
postion to the last cloud. It is always possible to win the game.

For each game, you will get an array of clouds numbered 0 if they are safe 
or 1 if they must be avoided.
'''
#!/bin/python3

import math
import os
import random
import re
import sys

def jumpingOnClouds(c):    
    i=0
    count=0
    while (i<len(c)-1):
        try:
            print(c[i+2])
            if c[i+2] == 1:
                i+=1
                count+=1  
                continue
        except IndexError:
            i+=1
            count+=1
            return count
            break             
        i+=2
        count+=1
    return count
                
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    c = list(map(int, input().rstrip().split()))

    result = jumpingOnClouds(c)

    fptr.write(str(result) + '\n')

    fptr.close()

